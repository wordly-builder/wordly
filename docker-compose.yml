version: '3.9'

services:
  postgres:
    image: postgres:14-alpine
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=wordly
    networks:
        - wordly-network

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - type: bind
        source: ~/data
        target: /data/db
    networks:
        - wordly-network

  minio:
    container_name: minio
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ROOTNAME
      MINIO_ROOT_PASSWORD: CHANGEME123
      MINIO_ACCESS_KEY: ACCESSKEY
      MINIO_SECRET_KEY: SECRETKEY
    volumes:
      - ~/minio:/data
    command: server /data --console-address ":9001"
    networks:
      - wordly-network

  createcredentials:
    image: minio/mc
    depends_on:
      - minio
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    entrypoint: >
      sh -c "
      chmod +x /wait-for-it.sh &&
      /wait-for-it.sh minio:9000 --timeout=30 --strict &&
      mc alias set myminio http://minio:9000 ROOTNAME CHANGEME123;
      if mc admin user info myminio your_access_key >/dev/null 2>&1; then
        echo 'User your_access_key already exists, skipping user creation';
      else
        mc admin user add myminio ACCESSKEY SECRETKEY;
        mc admin policy attach myminio readwrite --user ACCESSKEY;
      fi;
      exit 0;
      "
    networks:
        - wordly-network

  wordly:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - postgres
      - mongodb
      - minio
      - createcredentials
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:root@postgres/wordly
      - MINIO_ACCESS_KEY=ACCESSKEY
      - MINIO_SECRET_KEY=SECRETKEY
      - MINIO_URL=http://minio:9000
      - MONGO_URL=mongodb://user:pass@mongodb
      - MONGO_USER=user
      - MONGO_PASSWORD=pass
      - FORCE_LOGIN=false
      - PROFILE_ID=0
    networks:
      - wordly-network

volumes:
    data:

networks:
    wordly-network: